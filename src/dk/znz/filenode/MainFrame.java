/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on Aug 21, 2011, 4:30:18 PM
 */
package dk.znz.filenode;

import java.awt.event.KeyEvent;
import java.io.File;

/**
 * 
 * @author drphrozen
 */
public class MainFrame extends javax.swing.JFrame {

  private static final long serialVersionUID = 1L;

  private DirectoryModel    directoryModel;

  /** Creates new form MainFrame */
  public MainFrame() {
    initComponents();
    initCustomCode();
  }

  /**
   * This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jList1 = new javax.swing.JList<Node>();
    jLabel1 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jList1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jList1MouseClicked(evt);
      }
    });
    jList1.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jList1KeyPressed(evt);
      }
    });
    jScrollPane1.setViewportView(jList1);

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
    getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
    if (evt.getClickCount() == 2) {
      activateElement(jList1.locationToIndex(evt.getPoint()));
    }
  }//GEN-LAST:event_jList1MouseClicked

  private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
      activateElement(jList1.getSelectedIndex());
    }
  }//GEN-LAST:event_jList1KeyPressed

  /**
   * @param args
   *          the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new MainFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel      jLabel1;
  private javax.swing.JList<Node> jList1;
  private javax.swing.JScrollPane jScrollPane1;

  // End of variables declaration//GEN-END:variables

  private void changeDirectory(DirectoryNode node) {
    directoryModel = new DirectoryModel(node);
    jList1.setModel(directoryModel);
  }

  private void activateElement(int locationToIndex) {
    if (locationToIndex != -1) {
      Node node = directoryModel.getElementAt(locationToIndex);
      if (node instanceof DirectoryNode) {
        changeDirectory((DirectoryNode) node);
      }
    }
  }

  private void initCustomCode() {
    changeDirectory(new BasicDirectoryNode(new File("/")));
  }
}
